apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven'

    
//tasks
task createDirSources {
    description = 'Create conventional web application directory sources if they do not exist'
    doFirst {
        sourceSets.all {
            (java.srcDirs + resources.srcDirs + webAppDir).each { _srcDir ->
                if (!_srcDir.exists()) {
                    println("mkdirs ${_srcDir.canonicalPath}")
                    _srcDir.mkdirs()
                }
            }
        }
    }
}

//maven 
task copyPomFiles (dependsOn: 'install') {
    description = 'Copies POM files to project root directory, this is helpful to leverage IDEs that have Maven integration but lack a gradle one'
    doFirst {
        println "copying build/poms/pom-default.xml to pom.xml"
        ant.copy(file: "build/poms/pom-default.xml", tofile: "pom.xml")
        println "copied"
    }
}

ext.optionalDeps = []
ext.providedDeps = []

ext.optional = { optionalDeps << it }
ext.provided = { providedDeps << it }

install {
    repositories.mavenInstaller {
        customizePom(pom, project)
    }
}

def customizePom(pom, gradleProject) {
    pom.whenConfigured { generatedPom ->
        // respect 'optional' and 'provided' dependencies
        gradleProject.optionalDeps.each { dep ->
            generatedPom.dependencies.find { it.artifactId == dep.name }?.optional = true
        }
        gradleProject.providedDeps.each { dep ->
            generatedPom.dependencies.find { it.artifactId == dep.name }?.scope = 'provided'
        }

        // eliminate test-scoped dependencies (no need in maven central poms)
        generatedPom.dependencies.removeAll { dep ->
            dep.scope == 'test'
        }

        // add all items necessary for maven central publication
        generatedPom.project {
            name = gradleProject.description
            description = gradleProject.description
            organization {
                name = 'bajoneando'
            }
            build {
                plugins {
                    plugin {
                        groupId = 'org.apache.maven.plugins'
                        artifactId = 'maven-compiler-plugin'
                        configuration {
                            source = '1.6'
                            target = '1.6'
                        }
                    }
                    plugin {
                        groupId = 'org.apache.maven.plugins'
                        artifactId = 'maven-surefire-plugin'
                        configuration {
                            includes {
                                include = '**/*Tests.java'
                            }
                            excludes {
                                exclude = '**/*Abstract*.java'
                            }
                        }
                    }
                }
                resources {
                    resource {
                        directory = 'src/main/java'
                        includes = ['**/*']
                        excludes = ['**/*.java']
                    }
                    resource {
                        directory = 'src/main/resources'
                        includes = ['**/*']
                    }
                }
                testResources {
                    testResource {
                        directory = 'src/test/java'
                        includes = ['**/*']
                        excludes = ['**/*.java']
                    }
                    testResource {
                        directory = 'src/test/resources'
                        includes = ['**/*']
                    }
                }
            }
            developers {
                developer {
                    id = 'lnramirez'
                    name = 'Luis Ramirez Monterosa'
                    email = 'lnramirez@gmail.com'
                }
            }
        }
    }
}   

